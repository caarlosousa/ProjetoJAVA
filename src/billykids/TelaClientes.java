/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package billykids;
import DAL.ModuloConexao;
import br.com.parg.viacep.ViaCEP;
import br.com.parg.viacep.ViaCEPException;
import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Usu√°rio
 */
public class TelaClientes extends javax.swing.JInternalFrame {
    Connection conexao = null; //abre a conexao
    PreparedStatement pst = null; //executa sql
    ResultSet rs = null;        //exibe o resultado

    /**
     * Creates new form TelaClientes
     */
    public TelaClientes() {
        initComponents();
        conexao = ModuloConexao.conector();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCodigo = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        txtRG = new javax.swing.JTextField();
        txtCPF = new javax.swing.JFormattedTextField();
        txtEst = new javax.swing.JTextField();
        txtCel = new javax.swing.JFormattedTextField();
        txtNas = new javax.swing.JFormattedTextField();
        txtCEP = new javax.swing.JFormattedTextField();
        txtLog = new javax.swing.JTextField();
        txtNR = new javax.swing.JTextField();
        txtComp = new javax.swing.JTextField();
        cbbUF = new javax.swing.JComboBox<>();
        txtBairro = new javax.swing.JTextField();
        txtLoc = new javax.swing.JTextField();
        btnCliAdd = new javax.swing.JButton();
        btnCliPes = new javax.swing.JButton();
        btnCliEdi = new javax.swing.JButton();
        btnCliDel = new javax.swing.JButton();
        btnCliImp = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCodigo.setBackground(new java.awt.Color(28, 28, 28));
        txtCodigo.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(255, 255, 255));
        txtCodigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 30, 30));

        txtNome.setBackground(new java.awt.Color(28, 28, 28));
        txtNome.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtNome.setForeground(new java.awt.Color(255, 255, 255));
        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 42, 350, 30));

        txtRG.setBackground(new java.awt.Color(28, 28, 28));
        txtRG.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtRG.setForeground(new java.awt.Color(255, 255, 255));
        txtRG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 72, 130, 30));

        txtCPF.setBackground(new java.awt.Color(28, 28, 28));
        txtCPF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        txtCPF.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.setFont(new java.awt.Font("Poppins ExtraLight", 0, 20)); // NOI18N
        getContentPane().add(txtCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 102, 170, 30));

        txtEst.setBackground(new java.awt.Color(28, 28, 28));
        txtEst.setFont(new java.awt.Font("Poppins ExtraLight", 0, 20)); // NOI18N
        txtEst.setForeground(new java.awt.Color(255, 255, 255));
        txtEst.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtEst, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 132, 150, 30));

        txtCel.setBackground(new java.awt.Color(28, 28, 28));
        txtCel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        txtCel.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtCel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCel.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        getContentPane().add(txtCel, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 162, 180, 30));

        txtNas.setBackground(new java.awt.Color(28, 28, 28));
        txtNas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        txtNas.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtNas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNas.setFont(new java.awt.Font("Poppins ExtraLight", 0, 20)); // NOI18N
        getContentPane().add(txtNas, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 192, 160, 30));

        txtCEP.setBackground(new java.awt.Color(28, 28, 28));
        txtCEP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        txtCEP.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCEP.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        getContentPane().add(txtCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 140, 20));

        txtLog.setBackground(new java.awt.Color(28, 28, 28));
        txtLog.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtLog.setForeground(new java.awt.Color(255, 255, 255));
        txtLog.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 250, 20));

        txtNR.setBackground(new java.awt.Color(28, 28, 28));
        txtNR.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtNR.setForeground(new java.awt.Color(255, 255, 255));
        txtNR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtNR, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 302, 60, 30));

        txtComp.setBackground(new java.awt.Color(28, 28, 28));
        txtComp.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtComp.setForeground(new java.awt.Color(255, 255, 255));
        txtComp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtComp, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 322, 410, 30));

        cbbUF.setBackground(new java.awt.Color(28, 28, 28));
        cbbUF.setFont(new java.awt.Font("Poppins ExtraLight", 2, 14)); // NOI18N
        cbbUF.setForeground(new java.awt.Color(255, 255, 255));
        cbbUF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        cbbUF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(cbbUF, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, 20));

        txtBairro.setBackground(new java.awt.Color(28, 28, 28));
        txtBairro.setFont(new java.awt.Font("Poppins ExtraLight", 2, 18)); // NOI18N
        txtBairro.setForeground(new java.awt.Color(255, 255, 255));
        txtBairro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 190, 30));

        txtLoc.setBackground(new java.awt.Color(28, 28, 28));
        txtLoc.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtLoc.setForeground(new java.awt.Color(255, 255, 255));
        txtLoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 392, 180, 30));

        btnCliAdd.setBackground(new java.awt.Color(28, 28, 28));
        btnCliAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Adicionar.png"))); // NOI18N
        btnCliAdd.setBorder(null);
        btnCliAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnCliAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 70, -1));

        btnCliPes.setBackground(new java.awt.Color(28, 28, 28));
        btnCliPes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Pesquisar.png"))); // NOI18N
        btnCliPes.setBorder(null);
        btnCliPes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliPesActionPerformed(evt);
            }
        });
        getContentPane().add(btnCliPes, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 90, 70, -1));

        btnCliEdi.setBackground(new java.awt.Color(28, 28, 28));
        btnCliEdi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Editar.png"))); // NOI18N
        btnCliEdi.setBorder(null);
        btnCliEdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliEdiActionPerformed(evt);
            }
        });
        getContentPane().add(btnCliEdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 160, 70, 70));

        btnCliDel.setBackground(new java.awt.Color(28, 28, 28));
        btnCliDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Deletar.png"))); // NOI18N
        btnCliDel.setBorder(null);
        btnCliDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliDelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCliDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 230, 70, -1));

        btnCliImp.setBackground(new java.awt.Color(28, 28, 28));
        btnCliImp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Imprimir.png"))); // NOI18N
        btnCliImp.setBorder(null);
        btnCliImp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliImpActionPerformed(evt);
            }
        });
        getContentPane().add(btnCliImp, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 300, 70, -1));

        jButton1.setBackground(new java.awt.Color(28, 28, 28));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/lupa.png"))); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 30, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/TelaCliente.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCliAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliAddActionPerformed
        cadastrar();
    }//GEN-LAST:event_btnCliAddActionPerformed

    private void btnCliPesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliPesActionPerformed
        buscar();
    }//GEN-LAST:event_btnCliPesActionPerformed

    private void btnCliEdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliEdiActionPerformed
        editar();
    }//GEN-LAST:event_btnCliEdiActionPerformed

    private void btnCliDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliDelActionPerformed
        deletar();
    }//GEN-LAST:event_btnCliDelActionPerformed

    private void btnCliImpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliImpActionPerformed
        RelClientes();
    }//GEN-LAST:event_btnCliImpActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ViaCEP viaCep = new ViaCEP();
        
        try {
            viaCep.buscar(txtCEP.getText());
            txtBairro.setText(viaCep.getBairro());
            txtLog.setText(viaCep.getLogradouro());
            txtLoc.setText(viaCep.getLocalidade());
            cbbUF.setSelectedItem(viaCep.getUf());
            
        } catch (ViaCEPException ex) {
            System.out.println("e");
        }
       
       
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCliAdd;
    private javax.swing.JButton btnCliDel;
    private javax.swing.JButton btnCliEdi;
    private javax.swing.JButton btnCliImp;
    private javax.swing.JButton btnCliPes;
    private javax.swing.JComboBox<String> cbbUF;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtCel;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtComp;
    private javax.swing.JTextField txtEst;
    private javax.swing.JTextField txtLoc;
    private javax.swing.JTextField txtLog;
    private javax.swing.JTextField txtNR;
    private javax.swing.JFormattedTextField txtNas;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRG;
    // End of variables declaration//GEN-END:variables

    private void cadastrar() {
        String sql = "INSERT INTO cliente (C√≥digo, Nome, RG, CPF,"
                + "EstadoCivil, Telefone, Nascimento, CEP,"
                + "Logradouro, NR, Complemento, UF, Bairro, Localidade) VALUES"
                + "(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            pst.setString(2, txtNome.getText());  //PARA COPIAR CTRL+SHIFT+SETA PRA BAIXO
            pst.setString(3, txtRG.getText());
            pst.setString(4, txtCPF.getText());
            pst.setString(5, txtEst.getText());
            pst.setString(6, txtCel.getText());
            pst.setString(7, txtNas.getText());
            pst.setString(8, txtCEP.getText());
            pst.setString(9, txtLog.getText());
            pst.setString(10, txtNR.getText());
            pst.setString(11, txtComp.getText());
            pst.setString(12, cbbUF.getSelectedItem().toString());  
    //Pega posi√ß√£o de um array e transforma em string, ex: posi√ß√£o 1 = AC
            pst.setString(13, txtBairro.getText());
            pst.setString(14, txtLoc.getText());
            
            int resultado = pst.executeUpdate();
            
            if(resultado==1){
                JOptionPane.showMessageDialog(null, "Cliente cadastrado com sucesso!!");
                 txtCodigo.setText(null);
                 txtNome.setText(null);
                 txtRG.setText(null);
                 txtCPF.setText(null);
                 txtEst.setText(null);
                 txtCel.setText(null);
                 txtNas.setText(null);
                 txtCEP.setText(null);
                 txtLog.setText(null);
                 txtNR.setText(null);
                 txtComp.setText(null);
                 cbbUF.setSelectedItem(null);
                 txtBairro.setText(null);
                 txtLoc.setText(null);
                        
            }else{
                JOptionPane.showMessageDialog(null, "Cliente N√ÉO cadastrado!" );
            }
                     
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void buscar() {
       String sql= "SELECT * FROM cliente WHERE C√≥digo=?";
    
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            rs = pst.executeQuery();
            
            if(rs.next()){
                txtNome.setText(rs.getString("Nome"));
                txtRG.setText(rs.getString("RG"));
                txtCPF.setText(rs.getString("CPF"));
                txtEst.setText(rs.getString("EstadoCivil"));
                txtCel.setText(rs.getString("Telefone"));
                txtNas.setText(rs.getString("Nascimento"));
                txtCEP.setText(rs.getString("CEP"));
                txtLog.setText(rs.getString("Logradouro"));               
                txtNR.setText(rs.getString("NR"));
                txtComp.setText(rs.getString("Complemento"));  
                cbbUF.setSelectedItem(rs.getString("UF"));
                txtBairro.setText(rs.getString("Bairro"));               
                txtLoc.setText(rs.getString("Localidade"));               
                
                
                
            }else{
                JOptionPane.showMessageDialog(null, "Cliente n√£o localizado!!");
                txtNome.setText(null);
                txtRG.setText(null);
                txtCPF.setText(null);
                txtCel.setText(null);
                txtNas.setText(null);
                txtCodigo.setText(null);
                txtCEP.setText(null);
                txtLog.setText(null);
                txtNR.setText(null);
                txtComp.setText(null);
                txtBairro.setText(null);
                txtLoc.setText(null);
                cbbUF.setSelectedItem(null);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    
    }

    private void editar() {
       String sql = "UPDATE cliente SET Nome=?, RG=?, CPF=?,"
                + "EstadoCivil=?, Telefone=?, Nascimento=?, CEP=?,"
                + "Logradouro=?, NR=?, Complemento=?, UF=?, Bairro=?, Localidade=? WHERE C√≥digo=?";
                
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtNome.getText());  //PARA COPIAR CTRL+SHIFT+SETA PRA BAIXO
            pst.setString(2, txtRG.getText());
            pst.setString(3, txtCPF.getText());
            pst.setString(4, txtEst.getText());
            pst.setString(5, txtCel.getText());
            pst.setString(6, txtNas.getText());
            pst.setString(7, txtCEP.getText());
            pst.setString(8, txtLog.getText());
            pst.setString(9, txtNR.getText());
            pst.setString(10, txtComp.getText());
            pst.setString(11, cbbUF.getSelectedItem().toString());  
    //Pega posi√ß√£o de um array e transforma em string, ex: posi√ß√£o 1 = AC
            pst.setString(12, txtBairro.getText());
            pst.setString(13, txtLoc.getText());
            pst.setString(14, txtCodigo.getText());
            
            int atualizado = pst.executeUpdate();
            
            if(atualizado==1){
                JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso!!");
                 txtCodigo.setText(null);
                 txtNome.setText(null);
                 txtRG.setText(null);
                 txtCPF.setText(null);
                 txtEst.setText(null);
                 txtCel.setText(null);
                 txtNas.setText(null);
                 txtCEP.setText(null);
                 txtLog.setText(null);
                 txtNR.setText(null);
                 cbbUF.setSelectedItem(null);
                 txtComp.setText(null);
                 txtBairro.setText(null);
                 txtLoc.setText(null);
                        
            }else{
                JOptionPane.showMessageDialog(null, "Cliente N√ÉO atualizado!!" );
            }
                     
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }   
    }

    private void deletar() {
        String sql= "DELETE FROM cliente WHERE C√≥digo=?";
    
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            int apagado = pst.executeUpdate();
            
            if(apagado>0){
                JOptionPane.showMessageDialog(null, "Cliente exclu√≠do com sucesso!!");
                txtNome.setText(null);
                txtCodigo.setText(null);
                txtRG.setText(null);
                txtCPF.setText(null);
                txtEst.setText(null);
                txtCel.setText(null);
                txtNas.setText(null);
                txtCEP.setText(null);
                txtLog.setText(null);
                txtNR.setText(null);
                txtComp.setText(null);
                txtBairro.setText(null);
                txtLoc.setText(null);
                cbbUF.setSelectedItem(null);
                           
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }            
    }

    private void RelClientes() {
        int op= JOptionPane.showConfirmDialog(null, "Confirma impress√£o?", "Relat√≥rio de clientes", JOptionPane.YES_NO_OPTION);
        if(op==JOptionPane.YES_OPTION){
            
            try {
                String caminho = "C:/Rel/RelClienteBilly.jasper";
                JasperPrint print = JasperFillManager.fillReport(caminho, null, conexao);
                JasperViewer.viewReport(print,false);
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e);
            }
        }    
    } 
    
}

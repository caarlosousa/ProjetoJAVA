/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package billykids;
import DAL.ModuloConexao;
import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author Usu√°rio
 */
public class TelaDependentes extends javax.swing.JInternalFrame {
    Connection conexao = null; 
    PreparedStatement pst = null; 
    ResultSet rs = null;        

    /**
     * Creates new form TelaDependentes
     */
    public TelaDependentes() {
        initComponents();
        conexao = ModuloConexao.conector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCodigo = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtCPF = new javax.swing.JFormattedTextField();
        txtNome = new javax.swing.JTextField();
        btnDepAdd = new javax.swing.JButton();
        btnDepPes = new javax.swing.JButton();
        btnDepEdi = new javax.swing.JButton();
        btnDepDel = new javax.swing.JButton();
        btnDepImp = new javax.swing.JButton();
        txtData = new javax.swing.JFormattedTextField();
        txtRG = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(854, 480));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCodigo.setBackground(new java.awt.Color(28, 28, 28));
        txtCodigo.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(255, 255, 255));
        txtCodigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 22, 60, 30));

        txtTelefone.setBackground(new java.awt.Color(28, 28, 28));
        txtTelefone.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(28, 28, 28), 1, true));
        txtTelefone.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        getContentPane().add(txtTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 220, -1));

        txtCPF.setBackground(new java.awt.Color(28, 28, 28));
        txtCPF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        txtCPF.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        getContentPane().add(txtCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 92, 190, 30));

        txtNome.setBackground(new java.awt.Color(28, 28, 28));
        txtNome.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtNome.setForeground(new java.awt.Color(255, 255, 255));
        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 122, 260, 40));

        btnDepAdd.setBackground(new java.awt.Color(28, 28, 28));
        btnDepAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Adicionar.png"))); // NOI18N
        btnDepAdd.setBorder(null);
        btnDepAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnDepAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 70, -1));

        btnDepPes.setBackground(new java.awt.Color(28, 28, 28));
        btnDepPes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Pesquisar.png"))); // NOI18N
        btnDepPes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDepPes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepPesActionPerformed(evt);
            }
        });
        getContentPane().add(btnDepPes, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 90, 70, -1));

        btnDepEdi.setBackground(new java.awt.Color(28, 28, 28));
        btnDepEdi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Editar.png"))); // NOI18N
        btnDepEdi.setBorder(null);
        btnDepEdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepEdiActionPerformed(evt);
            }
        });
        getContentPane().add(btnDepEdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 160, 70, -1));

        btnDepDel.setBackground(new java.awt.Color(28, 28, 28));
        btnDepDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Deletar.png"))); // NOI18N
        btnDepDel.setBorder(null);
        btnDepDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepDelActionPerformed(evt);
            }
        });
        getContentPane().add(btnDepDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 230, 70, -1));

        btnDepImp.setBackground(new java.awt.Color(28, 28, 28));
        btnDepImp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/Imprimir.png"))); // NOI18N
        btnDepImp.setBorder(null);
        btnDepImp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepImpActionPerformed(evt);
            }
        });
        getContentPane().add(btnDepImp, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 300, 70, -1));

        txtData.setBackground(new java.awt.Color(28, 28, 28));
        txtData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        txtData.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtData.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        getContentPane().add(txtData, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 162, 190, 30));

        txtRG.setBackground(new java.awt.Color(28, 28, 28));
        txtRG.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtRG.setForeground(new java.awt.Color(255, 255, 255));
        txtRG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 190, 160, 30));

        txtID.setBackground(new java.awt.Color(28, 28, 28));
        txtID.setFont(new java.awt.Font("Poppins ExtraLight", 2, 20)); // NOI18N
        txtID.setForeground(new java.awt.Color(255, 255, 255));
        txtID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(28, 28, 28)));
        getContentPane().add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 222, 40, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/imagens/TelaDependentes.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -15, -1, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDepDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepDelActionPerformed
        deletar();
    }//GEN-LAST:event_btnDepDelActionPerformed

    private void btnDepAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepAddActionPerformed
        cadastrar();
    }//GEN-LAST:event_btnDepAddActionPerformed

    private void btnDepPesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepPesActionPerformed
        buscar();
    }//GEN-LAST:event_btnDepPesActionPerformed

    private void btnDepEdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepEdiActionPerformed
        editar();
    }//GEN-LAST:event_btnDepEdiActionPerformed

    private void btnDepImpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepImpActionPerformed
        RelDependentes();
    }//GEN-LAST:event_btnDepImpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDepAdd;
    private javax.swing.JButton btnDepDel;
    private javax.swing.JButton btnDepEdi;
    private javax.swing.JButton btnDepImp;
    private javax.swing.JButton btnDepPes;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRG;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void cadastrar() {
        String sql = "INSERT INTO dependentes (C√≥digo, Telefone, CPF,"
                + "Nome, Nascimento, RG, idCliente) VALUES"
                + "(?, ?, ?, ?, ?, ?, ?)";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            pst.setString(2, txtTelefone.getText());  //PARA COPIAR CTRL+SHIFT+SETA PRA BAIXO
            pst.setString(3, txtCPF.getText());
            pst.setString(4, txtNome.getText());
            pst.setString(5, txtData.getText());
            pst.setString(6, txtRG.getText());
            pst.setString(7, txtID.getText());
            
            int resultado = pst.executeUpdate();
            
            if(resultado==1){
                JOptionPane.showMessageDialog(null, "Dependente cadastrado com sucesso!!");
                 txtCodigo.setText(null);
                 txtTelefone.setText(null);
                 txtCPF.setText(null);
                 txtNome.setText(null);
                 txtData.setText(null);
                 txtRG.setText(null);
                 txtID.setText(null);

            }else{
                JOptionPane.showMessageDialog(null, "Dependente N√ÉO cadastrado!" );
            }
                     
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void buscar() {
        String sql= "SELECT * FROM dependentes WHERE C√≥digo=?";
    
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            rs = pst.executeQuery();
            
            if(rs.next()){
                txtTelefone.setText(rs.getString("Telefone"));
                txtCPF.setText(rs.getString("CPF"));
                txtNome.setText(rs.getString("Nome"));
                txtData.setText(rs.getString("Nascimento"));                   
                txtRG.setText(rs.getString("RG"));                   
                txtID.setText(rs.getString("idCliente"));                   
              
            }else{
                JOptionPane.showMessageDialog(null, "Dependente n√£o localizado!!");
                txtCodigo.setText(null);
                txtTelefone.setText(null);
                txtCPF.setText(null);
                txtNome.setText(null);
                txtData.setText(null);               
                txtRG.setText(null);               
                txtID.setText(null);               
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void editar() {
        String sql = "UPDATE dependentes SET Telefone=?, CPF=?, Nome=?,"
                + "Nascimento=?, RG=?, idCliente=? WHERE C√≥digo=?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtTelefone.getText());  //PARA COPIAR CTRL+SHIFT+SETA PRA BAIXO
            pst.setString(2, txtCPF.getText());
            pst.setString(3, txtNome.getText());
            pst.setString(4, txtData.getText());
            pst.setString(5, txtRG.getText());
            pst.setString(6, txtID.getText());
            pst.setString(7, txtCodigo.getText());
            
            int atualizado = pst.executeUpdate();
            
            if(atualizado==1){
                JOptionPane.showMessageDialog(null, "Dependente atualizado com sucesso!!");
                 txtCodigo.setText(null);
                 txtTelefone.setText(null);
                 txtCPF.setText(null);
                 txtNome.setText(null);
                 txtData.setText(null);
                 txtRG.setText(null);
                 txtID.setText(null);
                        
            }else{
                JOptionPane.showMessageDialog(null, "Dependente N√ÉO atualizado!!" );
            }
                     
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }   
    }

    private void deletar() {
        String sql= "DELETE FROM dependentes WHERE C√≥digo=?";
    
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            int apagado = pst.executeUpdate();
            
            if(apagado>0){
                JOptionPane.showMessageDialog(null, "Dependente exclu√≠do com sucesso!!");
                txtTelefone.setText(null);
                txtCPF.setText(null);
                txtNome.setText(null);
                txtData.setText(null);
                txtCodigo.setText(null);                          
                txtRG.setText(null);                          
                txtID.setText(null);                          
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }            
    }

    private void RelDependentes() {
        int op= JOptionPane.showConfirmDialog(null, "Confirma impress√£o?", "Relat√≥rio de Dependentes", JOptionPane.YES_NO_OPTION);
        if(op==JOptionPane.YES_OPTION){
            
            try {
                String caminho = "C:/Rel/RelDependentesBilly.jasper";
                JasperPrint print = JasperFillManager.fillReport(caminho, null, conexao);
                JasperViewer.viewReport(print,false);
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e);
            }
        }    
    } 
    
}
